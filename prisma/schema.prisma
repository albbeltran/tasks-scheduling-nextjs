// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


enum task_status {
  pending
  running
  completed
  failed
}

model priorities {
  id          Int      @id @default(autoincrement())
  description String   @unique @db.VarChar(20)

  tasks       tasks[]
}

model tasks {
  id             Int            @id @default(autoincrement())
  name           String         @unique @db.VarChar(50)
  arrival_time   DateTime       @db.Timestamptz(6)
  duration       Int
  status         task_status    @default(pending)
  priority_id    Int?           
  created_at     DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?      @default(now()) @db.Timestamptz(6)

  priority       priorities?    @relation(fields: [priority_id], references: [id], onDelete: SetNull)
  processes      processes[]
  statusHistory  task_status_history[]

  @@index([arrival_time], name: "idx_tasks_arrival_time")
  @@index([priority_id], name: "idx_tasks_priority_id")
}

model scheduling_runs {
  id          Int         @id @default(autoincrement())
  run_at      DateTime?   @default(now()) @db.Timestamptz(6)
  description String?     @db.VarChar(255)

  processes   processes[]

  @@index([id], name: "idx_scheduling_run_id")
}

model processes {
  id                Int             @id @default(autoincrement())
  scheduling_run_id Int
  task_id           Int
  started_at        DateTime?       @db.Timestamptz(6)
  ended_at          DateTime?       @db.Timestamptz(6)
  execution_order   Int

  scheduling_run    scheduling_runs @relation(fields: [scheduling_run_id], references: [id], onDelete: Cascade)
  task              tasks           @relation(fields: [task_id], references: [id])

  @@index([scheduling_run_id], name: "idx_processes_scheduling_run_id")
  @@index([task_id], name: "idx_processes_task_id")
  @@index([scheduling_run_id, execution_order], name: "idx_processes_execution_order")
}

model task_status_history {
  id          Int          @id @default(autoincrement())
  task_id     Int
  status      task_status
  changed_at  DateTime?    @default(now()) @db.Timestamptz(6)

  task        tasks        @relation(fields: [task_id], references: [id])

  @@index([task_id], name: "idx_task_status_history_task_id")
}
